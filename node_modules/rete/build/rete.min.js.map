{"version":3,"file":"rete.min.js","sources":["../src/engine/component.js","../src/control.js","../src/connection.js","../src/io.js","../src/socket.js","../src/input.js","../src/output.js","../src/node.js","../src/component.js","../src/core/events.js","../src/core/emitter.js","../src/core/validator.js","../src/core/context.js","../src/engine/events.js","../src/engine/index.js","../src/events.js","../src/view/drag.js","../src/view/zoom.js","../src/view/area.js","../src/view/control.js","../src/view/socket.js","../src/view/node.js","../src/view/connection.js","../src/view/index.js","../src/selected.js","../src/editor.js","../src/index.js"],"sourcesContent":["export class Component {\n    constructor(name) {\n        if (this.constructor === Component)\n            throw new TypeError('Can not construct abstract class.');\n        \n        this.name = name;\n        this.data = {};\n        this.engine = null;\n    }\n\n    worker() { }\n}","import { Node } from './node';\n\nexport class Control {\n\n    constructor(key) {\n        if (this.constructor === Control)\n            throw new TypeError('Can not construct abstract class');\n        if (!key)\n            throw new Error('The key parameter is missing in super() of Control ');\n\n        this.key = key;\n        this.data = {};\n        this.parent = null;\n    }\n\n    getNode() {\n        if (this.parent === null)\n            throw new Error(\"Control isn't added to Node/Input\");   \n        \n        return this.parent instanceof Node ? this.parent : this.parent.node;\n    }\n\n    getData(key) {\n        return this.getNode().data[key];\n    }\n\n    putData(key, data) {\n        this.getNode().data[key] = data;\n    }  \n}","export class Connection {\n\n    constructor(output, input) {\n        this.output = output;\n        this.input = input;\n        this.data = {};\n\n        this.input.addConnection(this);\n    }\n\n    remove() {\n        this.input.removeConnection(this);\n        this.output.removeConnection(this);\n    }\n}","import { Connection } from './connection';\n\nexport class IO {\n\n    constructor(key, name, socket, multiConns) {\n\t    this.node = null;\n        this.multipleConnections = multiConns;\n        this.connections = [];\n\t   \n        this.key = key;\n        this.name = name;\n        this.socket = socket;\n    }\n    \n    removeConnection(connection: Connection) {\n        this.connections.splice(this.connections.indexOf(connection), 1);\n    }\n\n    removeConnections() {\n        this.connections.map(connection => this.removeConnection(connection));\n    }\n}","export class Socket {\n\n    constructor(name: string, data = {}) {\n        this.name = name;\n        this.data = data;\n        this.compatible = [];\n    }\n\n    combineWith(socket: Socket) {\n        this.compatible.push(socket);\n    }\n\n    compatibleWith(socket: Socket) {\n        return this === socket || this.compatible.includes(socket);\n    }\n}","import { Connection } from './connection';\nimport { Control } from './control';\nimport { IO } from './io';\nimport { Socket } from './socket';\n\nexport class Input extends IO {\n   \n    constructor(key: string, title: string, socket: Socket, multiConns: boolean = false) {\n        super(key, title, socket, multiConns);\n        this.control = null;\n    }\n\n    hasConnection() {\n        return this.connections.length > 0;\n    }\n\n    addConnection(connection: Connection) {\n        if (!this.multipleConnections && this.hasConnection())\n            throw new Error('Multiple connections not allowed');\n        this.connections.push(connection);\n    }\n\n    addControl(control: Control) {\n        this.control = control;\n        control.parent = this;\n    }\n\n    showControl() {\n        return !this.hasConnection() && this.control !== null;\n    }\n\n    toJSON() {\n        return {\n            'connections': this.connections.map(c => {\n                return {\n                    node: c.output.node.id,\n                    output: c.output.key,\n                    data: c.data\n                };\n            })\n        };\n    }\n}","import { Connection } from './connection';\nimport { IO } from './io';\nimport { Input } from './input';\nimport { Socket } from './socket';\n\nexport class Output extends IO {\n  \n    constructor(key: string, title: string, socket: Socket, multiConns: boolean = true) {\n        super(key, title, socket, multiConns);\n    }\n    \n    hasConnection() {\n        return this.connections.length > 0;\n    }\n\n    connectTo(input: Input) {\n        if (!this.socket.compatibleWith(input.socket))\n            throw new Error('Sockets not compatible');\n        if (!input.multipleConnections && input.hasConnection())\n            throw new Error('Input already has one connection');\n        if (!this.multipleConnections && this.hasConnection())\n            throw new Error('Output already has one connection');\n\n        var connection = new Connection(this, input);\n\n        this.connections.push(connection);\n        return connection;\n    }\n\n    connectedTo(input: Input) {\n        return this.connections.some((item) => {\n            return item.input === input;\n        });\n    }\n\n    toJSON() {\n        return {\n            'connections': this.connections.map(c => {\n                return {\n                    node: c.input.node.id,\n                    input: c.input.key,\n                    data: c.data\n                }\n            })\n        };\n    }\n}","import { Control } from './control';\nimport { Input } from './input';\nimport { Output } from './output';\n\nexport class Node {\n\n    constructor(name: string) {\n        this.name = name;\n        this.id = Node.incrementId();\n        this.position = [0.0, 0.0];\n\n        this.inputs = new Map();\n        this.outputs = new Map();\n        this.controls = new Map();\n        this.data = {};\n        this.meta = {};\n    }\n\n    addControl(control: Control) {\n        control.parent = this;\n\n        this.controls.set(control.key, control);\n        return this;\n    }\n\n    removeControl(control: Control) {\n        control.parent = null;\n\n        this.controls.delete(control.key);\n    }\n\n    addInput(input: Input) {\n        if (input.node !== null)\n            throw new Error('Input has already been added to the node');\n\n        input.node = this;\n\n        this.inputs.set(input.key, input);\n        return this;\n    }\n\n    removeInput(input: Input) {\n        input.removeConnections();\n        input.node = null;\n\n        this.inputs.delete(input.key);\n    }\n\n    addOutput(output: Output) {\n        if (output.node !== null)\n            throw new Error('Output has already been added to the node');\n\n        output.node = this;\n\n        this.outputs.set(output.key, output);\n        return this;\n    }\n\n    removeOutput(output: Output) {\n        output.removeConnections();\n        output.node = null;\n\n        this.outputs.delete(output.key);\n    }\n\n    getConnections() {\n        const ios = [...this.inputs.values(), ...this.outputs.values()];\n        const connections = ios.reduce((arr, io) => {\n            return [...arr, ...io.connections];\n        }, []);\n\n        return connections;\n    }\n\n    update() {}\n\n    static incrementId() {\n        if (!this.latestId)\n            this.latestId = 1\n        else\n            this.latestId++\n        return this.latestId\n    }\n\n    static resetId() {\n        this.latestId = 0;\n    }\n\n    toJSON() {\n        return {\n            'id': this.id,\n            'data': this.data,\n            'inputs': Array.from(this.inputs).reduce((obj, [key, input]) => (obj[key] = input.toJSON(), obj), {}),\n            'outputs': Array.from(this.outputs).reduce((obj, [key, output]) => (obj[key] = output.toJSON(), obj), {}),\n            'position': this.position,\n            'name': this.name\n        }\n    }\n\n    static fromJSON(json: Object) {\n        const node = new Node(json.name);\n\n        node.id = json.id;\n        node.data = json.data;\n        node.position = json.position;\n        node.name = json.name;\n        Node.latestId = Math.max(node.id, Node.latestId);\n\n        return node;\n    }\n}\n","import { Component as ComponentWorker } from './engine/component';\nimport { Node } from './node';\n\nexport class Component extends ComponentWorker {\n    constructor(name) {\n        super(name);\n        if (this.constructor === Component)\n            throw new TypeError('Can not construct abstract class.');\n\n        this.editor = null;\n        this.data = {};\n    }\n\n    async builder() { }\n\n    async build(node: Node) {\n        await this.builder(node);\n\n        return node;\n    }\n\n    async createNode(data = {}) {\n        const node = new Node(this.name);\n        \n        node.data = data;\n        await this.build(node);\n\n        return node;\n    }\n}","export class Events {\n\n    constructor(handlers) {\n        this.handlers = {\n            warn: [console.warn],\n            error: [console.error],\n            ...handlers\n        };\n    }    \n}","import { Events } from './events';\n\nexport class Emitter {\n\n    constructor(events: Events | Emitter) {\n        this.events = events instanceof Emitter ? events.events : events.handlers;\n        this.silent = false;\n    }\n\n    on(names: string, handler: () => {}) {\n        names.split(' ').forEach(name => {\n            if (!this.events[name])\n                throw new Error(`The event ${name} does not exist`);\n            this.events[name].push(handler);\n        });\n\n        return this;\n    }\n\n    trigger(name: string, params) {\n        if (!(name in this.events))\n            throw new Error(`The event ${name} cannot be triggered`);\n\n        return this.events[name].reduce((r, e) => {\n            return (e(params) !== false) && r\n        }, true); // return false if at least one event is false        \n    }\n\n    bind(name: string) {\n        if (this.events[name])\n            throw new Error(`The event ${name} is already bound`);\n\n        this.events[name] = [];\n    }\n\n    exist(name: string) {\n        return Array.isArray(this.events[name]);\n    }\n}","export class Validator {\n\n    static isValidData(data) {\n        return typeof data.id === 'string' &&\n            this.isValidId(data.id) &&\n            data.nodes instanceof Object && !(data.nodes instanceof Array);\n    }\n\n    static isValidId(id) {\n        return /^[\\w-]{3,}@[0-9]+\\.[0-9]+\\.[0-9]+$/.test(id);\n    }\n\n    static validate(id, data) {\n        var msg = '';\n        var id1 = id.split('@');\n        var id2 = data.id.split('@');\n\n        if (!this.isValidData(data))\n            msg += 'Data is not suitable. '; \n        if (id !== data.id)\n            msg += 'IDs not equal. ';\n        if (id1[0] !== id2[0])\n            msg += 'Names don\\'t match. ';\n        if (id1[1] !== id2[1])\n            msg += 'Versions don\\'t match';\n\n        return { success: msg ==='', msg };\n    }\n}","import { Emitter } from './emitter'\nimport { Validator } from './validator'\n\nexport class Context extends Emitter {\n\n    constructor(id, events) {\n        super(events);\n\n        if (!Validator.isValidId(id))\n            throw new Error('ID should be valid to name@0.1.0 format');  \n        \n        this.id = id;\n        this.plugins = new Map();\n    }\n\n    use(plugin, options = {}) {\n        if (plugin.name && this.plugins.has(plugin.name)) throw new Error(`Plugin ${plugin.name} already in use`)\n\n        plugin.install(this, options);\n        this.plugins.set(plugin.name, options)\n    }\n}","import { Events } from '../core/events';\n\nexport class EngineEvents extends Events {\n\n    constructor() {\n        super({\n            componentregister: []\n        });\n    }    \n}","import { Component } from './component';\nimport { Context } from '../core/context';\nimport { EngineEvents } from './events';\nimport { Validator } from '../core/validator';\n\nvar State = { AVALIABLE:0, PROCESSED: 1, ABORT: 2 };\n\nexport { Component };\n\nexport class Engine extends Context {\n\n    constructor(id: string) {\n        super(id, new EngineEvents());\n\n        this.components = [];\n        this.args = [];\n        this.data = null;\n        this.state = State.AVALIABLE;\n        this.onAbort = () => { };\n    }\n\n    clone() {\n        const engine = new Engine(this.id);\n\n        this.components.map(c => engine.register(c));\n\n        return engine;\n    }\n\n    register(component: Component) {\n        this.components.push(component);\n        this.trigger('componentregister', component);\n    }\n\n    async throwError (message, data = null) {\n        await this.abort();\n        this.trigger('error', { message, data });\n        this.processDone();\n\n        return 'error';\n    }\n\n    extractInputNodes(node, nodes) {\n        return Object.keys(node.inputs).reduce((a, key) => {\n            return [...a, ...(node.inputs[key].connections || []).reduce((b, c) => [...b, nodes[c.node]], [])]\n        }, []);\n    }\n\n    detectRecursions(nodes) {\n        const nodesArr = Object.keys(nodes).map(id => nodes[id]);\n        const findSelf = (node, inputNodes) => {\n            if (inputNodes.some(n => n === node))\n                return node;\n            \n            for (var i = 0; i < inputNodes.length; i++) {\n                if (findSelf(node, this.extractInputNodes(inputNodes[i], nodes)))\n                    return node;\n            }\n\n            return null;\n        }\n\n        return nodesArr.map(node => {\n            return findSelf(node, this.extractInputNodes(node, nodes))\n        }).filter(r => r !== null);\n    }\n\n    processStart() {\n        if (this.state === State.AVALIABLE) {  \n            this.state = State.PROCESSED;\n            return true;\n        }\n\n        if (this.state === State.ABORT) {\n            return false;\n        }\n\n        console.warn(`The process is busy and has not been restarted.\n                Use abort() to force it to complete`);\n        return false;\n    }\n\n    processDone() {\n        var success = this.state !== State.ABORT;\n\n        this.state = State.AVALIABLE;\n        \n        if (!success) {\n            this.onAbort();\n            this.onAbort = () => { }\n        }    \n\n        return success;\n    }\n\n    async abort() {\n        return new Promise(ret => {\n            if (this.state === State.PROCESSED) {\n                this.state = State.ABORT;\n                this.onAbort = ret;\n            }\n            else if (this.state === State.ABORT) {\n                this.onAbort();\n                this.onAbort = ret;\n            }\n            else\n                ret();\n        });\n    }\n\n    async lock(node) {\n        return new Promise(res => {\n            node.unlockPool = node.unlockPool || [];\n            if (node.busy && !node.outputData)\n                node.unlockPool.push(res);\n            else \n                res();\n            \n            node.busy = true;\n        });    \n    }\n\n    unlock(node) {\n        node.unlockPool.forEach(a => a());\n        node.unlockPool = [];\n        node.busy = false;\n    }\n\n    async extractInputData(node) {\n        const obj = {};\n\n        for (let key of Object.keys(node.inputs)) {\n            let input = node.inputs[key];\n            var conns = input.connections;\n            let connData = await Promise.all(conns.map(async (c) => {\n                const prevNode = this.data.nodes[c.node];\n\n                let outputs = await this.processNode(prevNode);\n\n                if (!outputs) \n                    this.abort();\n                else\n                    return outputs[c.output];\n            }));\n\n            obj[key] = connData;\n        }\n\n        return obj;\n    }\n\n    async processWorker(node) {\n        var inputData = await this.extractInputData(node);\n        var component = this.components.find(c => c.name === node.name);\n        var outputData = {};\n\n        try {\n            await component.worker(node, inputData, outputData, ...this.args);\n        } catch (e) {\n            this.abort();\n            this.trigger('warn', e);\n        }\n\n        return outputData;\n    }\n\n    async processNode(node) {\n        if (this.state === State.ABORT || !node)\n            return null;\n        \n        await this.lock(node);\n\n        if (!node.outputData) {\n            node.outputData = this.processWorker(node)\n        }\n\n        this.unlock(node);\n        return node.outputData;\n    }\n\n    async forwardProcess(node) {\n        if (this.state === State.ABORT)\n            return null;\n\n        return await Promise.all(Object.keys(node.outputs).map(async (key) => {\n            const output = node.outputs[key];\n\n            return await Promise.all(output.connections.map(async (c) => {\n                const nextNode = this.data.nodes[c.node];\n\n                await this.processNode(nextNode);\n                await this.forwardProcess(nextNode);\n            }));\n        }));\n    }\n\n    copy(data) {\n        data = Object.assign({}, data);\n        data.nodes = Object.assign({}, data.nodes);\n        \n        Object.keys(data.nodes).forEach(key => {\n            data.nodes[key] = Object.assign({}, data.nodes[key])\n        });\n        return data;\n    }\n\n    async validate(data) {\n        var checking = Validator.validate(this.id, data);\n\n        if (!checking.success)\n            return await this.throwError(checking.msg);  \n        \n        var recurentNodes = this.detectRecursions(data.nodes);\n\n        if (recurentNodes.length > 0)\n            return await this.throwError('Recursion detected', recurentNodes);      \n         \n        return true;\n    }\n\n    async processStartNode(id) {\n        if (id) {\n            let startNode = this.data.nodes[id];\n\n            if (!startNode)\n                return await this.throwError('Node with such id not found');   \n            \n            await this.processNode(startNode);\n            await this.forwardProcess(startNode);\n        }\n    }\n\n    async processUnreachable() {\n        for (var i in this.data.nodes) // process nodes that have not been reached\n            if (typeof this.data.nodes[i].outputData === 'undefined') {\n                var node = this.data.nodes[i];\n\n                await this.processNode(node);\n                await this.forwardProcess(node);\n            }\n    }\n\n    async process(data: Object, startId: ?number = null, ...args) {\n        if (!this.processStart()) return;\n        if (!this.validate(data)) return;    \n        \n        this.data = this.copy(data);\n        this.args = args;\n\n        await this.processStartNode(startId);\n        await this.processUnreachable();\n        \n        return this.processDone()?'success':'aborted';\n    }\n}","import { Events } from './core/events';\n\nexport class EditorEvents extends Events {\n\n    constructor() {\n        super({\n            nodecreate: [],\n            nodecreated: [],\n            noderemove: [],\n            noderemoved: [],\n            connectioncreate: [],\n            connectioncreated: [],\n            connectionremove: [],\n            connectionremoved: [],\n            translatenode: [],\n            nodetranslate: [],\n            nodetranslated: [],\n            nodedraged: [],\n            selectnode: [],\n            nodeselect: [],\n            nodeselected: [],\n            rendernode: [],\n            rendersocket: [],\n            rendercontrol: [],\n            renderconnection: [],\n            updateconnection: [],\n            componentregister: [],\n            keydown: [],\n            keyup: [],\n            translate: [],\n            translated: [],\n            zoom: [],\n            zoomed: [],\n            click: [],\n            mousemove: [],\n            contextmenu: [],\n            import: [],\n            export: [],\n            process: []\n        });\n    }    \n}","export class Drag {\n\n    constructor(el, onTranslate = () => {}, onStart = () => {}, onDrag = () => {}) {\n        this.pointerStart = null;\n\n        this.el = el;\n        this.onTranslate = onTranslate;\n        this.onStart = onStart;\n        this.onDrag = onDrag;\n\n        this.initEvents(el);\n    }\n\n    initEvents(el) {\n        el.style.touchAction = 'none';\n\n        el.addEventListener('pointerdown', this.down.bind(this));\n        window.addEventListener('pointermove', this.move.bind(this));\n        window.addEventListener('pointerup', this.up.bind(this));\n    }\n\n    down(e) {\n        e.stopPropagation();\n        this.pointerStart = [e.pageX, e.pageY]\n\n        this.onStart(e);\n    }\n\n    move(e) {\n        if (!this.pointerStart) return;\n        e.preventDefault();\n\n        let [x, y] = [e.pageX, e.pageY]\n        let delta = [x - this.pointerStart[0], y - this.pointerStart[1]];\n        let zoom = this.el.getBoundingClientRect().width / this.el.offsetWidth;\n\n        this.onTranslate(delta[0] / zoom, delta[1] / zoom, e);\n    }\n\n    up(e) {\n        if (!this.pointerStart) return;\n        \n        this.pointerStart = null;\n        this.onDrag(e);\n    }\n}","export class Zoom {\n\n    constructor(container, el, intensity, onzoom) {\n        this.el = el;\n        this.intensity = intensity;\n        this.onzoom = onzoom;\n\n        this.distance = null;\n\n        container.addEventListener('wheel', this.wheel.bind(this));\n        container.addEventListener('touchmove', this.move.bind(this));\n        container.addEventListener('touchend', this.end.bind(this));\n        container.addEventListener('touchcancel', this.end.bind(this));\n        container.addEventListener('dblclick', this.dblclick.bind(this));\n    }\n\n    wheel(e) {\n        e.preventDefault();\n        \n        var rect = this.el.getBoundingClientRect();\n        var delta = (e.wheelDelta ? e.wheelDelta / 120 : - e.deltaY / 3) * this.intensity;\n\n        var ox = (rect.left - e.clientX) * delta;\n        var oy = (rect.top - e.clientY) * delta;\n\n        this.onzoom(delta, ox, oy, 'wheel');\n    }\n\n    touches(e) {\n        let [x1, y1] = [e.touches[0].clientX, e.touches[0].clientY];\n        let [x2, y2] = [e.touches[1].clientX, e.touches[1].clientY];\n        let distance = Math.sqrt(Math.pow(x1 - x2, 2) + Math.pow(y1 - y2, 2));\n\n        return {\n            cx: (x1 + x2)/2,\n            cy: (y1 + y2)/2,\n            distance\n        };\n    }\n\n    move(e) {\n        if (e.touches.length < 2) return;\n        \n        let rect = this.el.getBoundingClientRect();\n        let { cx, cy, distance } = this.touches(e);\n\n        if (this.distance !== null) {\n            let delta = distance / this.distance - 1;\n    \n            var ox = (rect.left - cx) * delta;\n            var oy = (rect.top - cy) * delta;\n\n            this.onzoom(delta, ox, oy, 'touch');\n        }\n        this.distance = distance;\n    }\n\n    end() {\n        this.distance = null;\n    }\n\n    dblclick(e) {\n        e.preventDefault();\n        \n        var rect = this.el.getBoundingClientRect();\n        var delta = 4 * this.intensity;\n\n        var ox = (rect.left - e.clientX) * delta;\n        var oy = (rect.top - e.clientY) * delta;\n\n        this.onzoom(delta, ox, oy, 'dblclick'); \n    }\n}","import { Drag } from './drag';\nimport { Emitter } from '../core/emitter';\nimport { Zoom } from './zoom';\n\nexport class Area extends Emitter {\n\n    constructor(container, emitter: Emitter) {\n        super(emitter);\n        \n        const el = this.el = document.createElement('div');\n\n        this.container = container;\n        this.transform = { k: 1, x: 0, y: 0 };\n        this.mouse = { x: 0, y: 0 }\n\n        el.style.transformOrigin = '0 0';\n\n        this._startPosition = null;\n        this._zoom = new Zoom(container, el, 0.1, this.onZoom.bind(this));\n        this._drag = new Drag(container, this.onTranslate.bind(this), this.onStart.bind(this));\n        this.container.addEventListener('pointermove', this.pointermove.bind(this));\n\n        this.update();\n    }\n\n    update() {\n        const t = this.transform;\n\n        this.el.style.transform = `translate(${t.x}px, ${t.y}px) scale(${t.k})`;\n    }\n\n    pointermove(e) {\n        const { clientX, clientY } = e;\n        const rect = this.el.getBoundingClientRect();\n        const x = clientX - rect.left;\n        const y = clientY - rect.top;\n        const k = this.transform.k;\n        \n        this.mouse = { x: x / k, y: y / k };\n        this.trigger('mousemove', { ...this.mouse }); // TODO rename on `pointermove`\n    }\n\n    onStart() {\n        this._startPosition = { ...this.transform };\n    }\n\n    onTranslate(dx, dy) {\n        this.translate(this._startPosition.x + dx, this._startPosition.y + dy)\n    }\n\n    onZoom(delta, ox, oy, source) {\n        this.zoom(this.transform.k * (1 + delta), ox, oy, source);\n\n        this.update();\n    }\n\n    translate(x, y) {\n        const params = { transform: this.transform, x, y };\n\n        if (!this.trigger('translate', params)) return;\n\n        this.transform.x = params.x;\n        this.transform.y = params.y;\n\n        this.update();\n        this.trigger('translated');\n    }\n\n    zoom(zoom, ox = 0, oy = 0, source) {\n        const k = this.transform.k;\n        const params = { transform: this.transform, zoom, source };\n\n        if (!this.trigger('zoom', params)) return;\n        \n        const d = (k - params.zoom) / ((k - zoom) || 1);\n\n        this.transform.k = params.zoom || 1;\n        this.transform.x += ox * d;\n        this.transform.y += oy * d;\n\n        this.update();\n        this.trigger('zoomed', { source });\n    }\n\n    appendChild(el) {\n        this.el.appendChild(el)\n    }\n\n    removeChild(el) {\n        this.el.removeChild(el)\n    }\n}","import { Emitter } from '../core/emitter';\n\nexport class Control extends Emitter {\n\n    constructor(el, control, emitter) {\n        super(emitter);\n        this.trigger('rendercontrol', { el, control });\n    }\n}","import { Emitter } from '../core/emitter';\n\nexport class Socket extends Emitter {\n\n    constructor(el, type, io, node, emitter) {\n        super(emitter);\n        this.el = el;\n        this.type = type;\n        this.io = io;\n        this.node = node;\n\n        this.trigger('rendersocket', { el, [type]: this.io, socket: io.socket });\n    }\n\n    getPosition({ position }) {\n        const el = this.el;\n\n        return [\n            position[0] + el.offsetLeft + el.offsetWidth / 2,\n            position[1] + el.offsetTop + el.offsetHeight / 2\n        ]\n    }\n}","import { Control } from '../control';\nimport { Drag } from './drag';\nimport { Emitter } from '../core/emitter';\nimport { IO } from '../io';\nimport { Control as ViewControl } from './control';\nimport { Socket as ViewSocket } from './socket';\n\nexport class Node extends Emitter {\n\n    constructor(node, component, emitter) {\n        super(emitter);\n\n        this.node = node;\n        this.component = component;\n        this.sockets = new Map();\n        this.controls = new Map();\n        this.el = document.createElement('div');\n        this.el.style.position = 'absolute';\n\n        this.el.addEventListener('contextmenu', e => this.trigger('contextmenu', { e, node: this.node }));\n\n        this._startPosition = null;\n        this._drag = new Drag(this.el, this.onTranslate.bind(this), this.onSelect.bind(this), () => {\n            this.trigger('nodedraged', node);\n        });\n\n        this.trigger('rendernode', {\n            el: this.el, \n            node, \n            component: component.data, \n            bindSocket: this.bindSocket.bind(this),\n            bindControl: this.bindControl.bind(this)\n        });\n\n        this.update();\n    }\n\n    bindSocket(el: HTMLElement, type: string, io: IO) {\n        this.sockets.set(io, new ViewSocket(el, type, io, this.node, this));\n    }\n\n    bindControl(el: HTMLElement, control: Control) {\n        this.controls.set(control, new ViewControl(el, control, this));\n    }\n\n    getSocketPosition(io) {\n        return this.sockets.get(io).getPosition(this.node);\n    }\n\n    onSelect(e) {        \n        this.onStart();\n        this.trigger('selectnode', { node: this.node, accumulate: e.ctrlKey });\n    }\n\n    onStart() {\n        this._startPosition = [...this.node.position];\n    }\n\n    onTranslate(dx, dy) {\n        this.trigger('translatenode', { node: this.node, dx, dy });\n    }\n\n    onDrag(dx, dy) {\n        const x = this._startPosition[0] + dx;\n        const y = this._startPosition[1] + dy;\n\n        this.translate(x, y);\n    }\n\n    translate(x, y) {\n        const node = this.node;\n        const params = { node, x, y };\n\n        if (!this.trigger('nodetranslate', params)) return;\n\n        const prev = [...node.position];\n\n        node.position[0] = params.x;\n        node.position[1] = params.y;\n\n        this.update();\n        this.trigger('nodetranslated', { node, prev });\n    }\n\n    update() {\n        this.el.style.transform = `translate(${this.node.position[0]}px, ${this.node.position[1]}px)`;\n    }\n\n    remove() {\n        \n    }\n}","import { Emitter } from '../core/emitter';\nimport { Node as ViewNode } from './node';\n\nexport class Connection extends Emitter {\n\n    constructor(connection, inputNode: ViewNode, outputNode: ViewNode, emitter) {\n        super(emitter);\n        this.connection = connection;\n        this.inputNode = inputNode;\n        this.outputNode = outputNode;\n\n        this.el = document.createElement('div');\n        this.el.style.position = 'absolute';\n        this.el.style.zIndex = '-1';\n\n        this.trigger('renderconnection', { \n            el: this.el, \n            connection: this.connection, \n            points: this.getPoints()\n        });\n    }\n\n    getPoints() {\n        const [x1, y1] = this.outputNode.getSocketPosition(this.connection.output);\n        const [x2, y2] = this.inputNode.getSocketPosition(this.connection.input);\n\n        return [x1, y1, x2, y2];\n    }\n\n    update() {\n        this.trigger('updateconnection', { \n            el: this.el, \n            connection: this.connection, \n            points: this.getPoints()\n        });\n    }\n}","import { Area } from './area';\nimport { Connection } from '../connection';\nimport { Emitter } from '../core/emitter';\nimport { Node } from '../node';\nimport { Connection as ViewConnection } from './connection';\nimport { Node as ViewNode } from './node';\n\nexport class EditorView extends Emitter {\n\n    constructor(container: HTMLElement, components: Object, emitter: Emitter) {\n        super(emitter);\n\n        this.container = container;\n        this.components = components;\n\n        this.container.style.overflow = 'hidden';\n\n        this.nodes = new Map();\n        this.connections = new Map();\n\n        this.container.addEventListener('click', this.click.bind(this));\n        this.container.addEventListener('contextmenu', e => this.trigger('contextmenu', { e, view: this }));\n        window.addEventListener('resize', this.resize.bind(this));\n\n        this.on('nodetranslated', this.updateConnections.bind(this));\n            \n        this.area = new Area(container, this);\n        this.container.appendChild(this.area.el);\n    }\n\n    addNode(node: Node) {\n        const nodeView = new ViewNode(node, this.components.get(node.name), this);\n\n        this.nodes.set(node, nodeView);\n        this.area.appendChild(nodeView.el);\n    }\n\n    removeNode(node: Node) {\n        const nodeView = this.nodes.get(node);\n\n        this.nodes.delete(node);\n        this.area.removeChild(nodeView.el);\n    }\n\n    addConnection(connection: Connection) {\n        const viewInput = this.nodes.get(connection.input.node);\n        const viewOutput = this.nodes.get(connection.output.node);\n        const connView = new ViewConnection(connection, viewInput, viewOutput, this);\n\n        this.connections.set(connection, connView);\n        this.area.appendChild(connView.el);\n    }\n\n    removeConnection(connection: Connection) {\n        const connView = this.connections.get(connection);\n\n        this.connections.delete(connection);\n        this.area.removeChild(connView.el);\n    }\n\n    updateConnections({ node }) {\n        node.getConnections().map(conn => {\n            this.connections.get(conn).update();\n        });\n    }\n\n    resize() {\n        const { container } = this;\n        const width = container.parentElement.clientWidth;\n        const height = container.parentElement.clientHeight;\n\n        container.style.width = width + 'px';\n        container.style.height = height + 'px';\n    }\n\n    click(e) {\n        const container = this.container;\n        \n        if (container !== e.target) return;\n        if (!this.trigger('click', { e, container })) return;\n    }\n}\n","import { Node } from './node';\n\nexport class Selected {\n\n    constructor() {\n        this.list = [];\n    }\n\n    add(item: Node, accumulate = false) {\n        if (!accumulate)\n            this.list = [item]; \n        else if (!this.contains(item))\n            this.list.push(item);   \n    }\n\n    clear() {\n        this.list = [];\n    }\n\n    remove(item) {\n        this.list.splice(this.list.indexOf(item), 1);\n    }\n\n    contains(item) {\n        return this.list.indexOf(item) !== -1;\n    }\n\n    each(callback) {\n        this.list.forEach(callback);\n    }\n}","import { Component } from './component';\nimport { Connection } from './connection';\nimport { Context } from './core/context';\nimport { EditorEvents } from './events';\nimport { EditorView } from './view/index';\nimport { Input } from './input';\nimport { Node } from './node';\nimport { Output } from './output';\nimport { Selected } from './selected';\nimport { Validator } from './core/validator';\n\nexport class NodeEditor extends Context {\n\n    constructor(id: string, container: HTMLElement) {\n        super(id, new EditorEvents());\n        \n        this.nodes = [];\n        this.components = new Map();\n\n        this.selected = new Selected();\n        this.view = new EditorView(container, this.components, this);\n\n        window.addEventListener('keydown', e => this.trigger('keydown', e));\n        window.addEventListener('keyup', e => this.trigger('keyup', e));\n        this.on('selectnode', ({ node, accumulate }) => this.selectNode(node, accumulate));\n        this.on('nodeselected', () => this.selected.each(n => this.view.nodes.get(n).onStart()));\n        this.on('translatenode', ({ dx, dy }) => this.selected.each(n => this.view.nodes.get(n).onDrag(dx, dy)));\n    }\n\n    addNode(node: Node) {\n        if (!this.trigger('nodecreate', node)) return;\n\n        this.nodes.push(node);\n        this.view.addNode(node);\n        \n        this.trigger('nodecreated', node);\n    }\n\n    removeNode(node: Node) {\n        if (!this.trigger('noderemove', node)) return;\n\n        node.getConnections().forEach(c => this.removeConnection(c));\n\n        this.nodes.splice(this.nodes.indexOf(node), 1);\n        this.view.removeNode(node);\n\n        this.trigger('noderemoved', node);\n    }\n\n    connect(output: Output, input: Input, data = {}) {\n        if (!this.trigger('connectioncreate', { output, input })) return;\n\n        try {\n            const connection = output.connectTo(input);\n\n            connection.data = data;\n            this.view.addConnection(connection);\n\n            this.trigger('connectioncreated', connection);\n        } catch (e) {\n            this.trigger('warn', e)\n        }\n    }\n\n    removeConnection(connection: Connection) {\n        if (!this.trigger('connectionremove', connection)) return;\n            \n        this.view.removeConnection(connection);\n        connection.remove();\n\n        this.trigger('connectionremoved', connection);\n    }\n\n    selectNode(node: Node, accumulate: boolean = false) {\n        if (this.nodes.indexOf(node) === -1) \n            throw new Error('Node not exist in list');\n        \n        if (!this.trigger('nodeselect', node)) return;\n\n        this.selected.add(node, accumulate);\n        \n        this.trigger('nodeselected', node);\n    }\n\n    getComponent(name) {\n        const component = this.components.get(name);\n\n        if (!component)\n            throw `Component ${name} not found`;\n        \n        return component;\n    }\n\n    register(component: Component) {\n        component.editor = this;\n        this.components.set(component.name, component);\n        this.trigger('componentregister', component)\n    }\n\n    clear() {\n        [...this.nodes].map(node => this.removeNode(node));\n    }\n\n    toJSON() {\n        const data = { id: this.id, nodes: {} };\n        \n        this.nodes.forEach(node => data.nodes[node.id] = node.toJSON());\n        this.trigger('export', data);\n        return data;\n    }\n\n    beforeImport(json: Object) {\n        var checking = Validator.validate(this.id, json);\n        \n        if (!checking.success) {\n            this.trigger('warn', checking.msg);\n            return false;\n        }\n        \n        this.silent = true;\n        this.clear();\n        this.trigger('import', json);\n        return true;\n    }\n\n    afterImport() {\n        this.silent = false;\n        return true;\n    }\n\n    async fromJSON(json: Object) {\n        if (!this.beforeImport(json)) return false;\n        var nodes = {};\n\n        try {\n            await Promise.all(Object.keys(json.nodes).map(async id => {\n                var node = json.nodes[id];\n                var component = this.getComponent(node.name);\n\n                nodes[id] = await component.build(Node.fromJSON(node));\n                this.addNode(nodes[id]);\n            }));\n        \n            Object.keys(json.nodes).forEach(id => {\n                var jsonNode = json.nodes[id];\n                var node = nodes[id];\n                \n                Object.keys(jsonNode.outputs).forEach(key => {\n                    var outputJson = jsonNode.outputs[key];\n\n                    outputJson.connections.forEach(jsonConnection => {\n                        var nodeId = jsonConnection.node;\n                        var data = jsonConnection.data;\n                        var targetOutput = node.outputs.get(key);\n                        var targetInput = nodes[nodeId].inputs.get(jsonConnection.input);\n\n                        this.connect(targetOutput, targetInput, data);\n                    });\n                });\n\n            });\n        }\n        catch (e) {\n            this.trigger('warn', e);\n            return !this.afterImport();\n        } finally {\n            return this.afterImport();\n        }\n    }\n}\n","import { Component } from './component';\nimport { Control } from './control';\nimport { Emitter } from './core/emitter';\nimport { Engine } from './engine/index';\nimport { Input } from './input';\nimport { Node } from './node';\nimport { NodeEditor } from './editor';\nimport { Output } from './output';\nimport { Socket } from './socket';\n\nexport { Component } from './component';\nexport { Control } from './control';\nexport { Emitter } from './core/emitter';\nexport { Engine } from './engine/index';\nexport { Input } from './input';\nexport { Node } from './node';\nexport { NodeEditor } from './editor';\nexport { Output } from './output';\nexport { Socket } from './socket';\n\nexport default {\n    Component,\n    Control,\n    Emitter,\n    Engine,\n    Input,\n    Node,\n    NodeEditor,\n    Output,\n    Socket\n}"],"names":["Component","name","this","constructor","TypeError","data","engine","Control","key","Error","parent","Node","node","getNode","Connection","output","input","addConnection","removeConnection","IO","socket","multiConns","multipleConnections","connections","connection","splice","indexOf","map","_this","Socket","compatible","push","includes","Input","title","control","length","hasConnection","c","id","Output","compatibleWith","some","item","incrementId","position","inputs","Map","outputs","controls","meta","set","delete","removeConnections","values","reduce","arr","io","Array","from","obj","toJSON","latestId","json","Math","max","editor","ComponentWorker","builder","build","Events","handlers","warn","console","error","Emitter","events","silent","names","handler","split","forEach","params","r","e","isArray","Validator","isValidId","nodes","Object","test","msg","id1","id2","isValidData","success","Context","plugins","plugin","options","has","install","EngineEvents","componentregister","State","Engine","components","args","state","onAbort","register","component","trigger","message","abort","processDone","keys","a","b","nodesArr","findSelf","inputNodes","n","i","_this2","extractInputNodes","filter","Promise","ret","_this3","res","unlockPool","busy","outputData","conns","all","prevNode","_this4","processNode","connData","extractInputData","inputData","find","worker","lock","processWorker","unlock","nextNode","_this5","forwardProcess","assign","checking","validate","throwError","recurentNodes","detectRecursions","startNode","startId","processStart","copy","processStartNode","processUnreachable","EditorEvents","nodecreate","nodecreated","noderemove","noderemoved","connectioncreate","connectioncreated","connectionremove","connectionremoved","translatenode","nodetranslate","nodetranslated","nodedraged","selectnode","nodeselect","nodeselected","rendernode","rendersocket","rendercontrol","renderconnection","updateconnection","keydown","keyup","translate","translated","zoom","zoomed","click","mousemove","contextmenu","import","export","process","Drag","el","onTranslate","onStart","onDrag","pointerStart","initEvents","style","touchAction","addEventListener","down","bind","window","move","up","stopPropagation","pageX","pageY","preventDefault","y","delta","getBoundingClientRect","width","offsetWidth","Zoom","container","intensity","onzoom","distance","wheel","end","dblclick","rect","wheelDelta","deltaY","ox","left","clientX","oy","top","clientY","touches","x1","y1","x2","y2","cx","cy","sqrt","pow","Area","emitter","document","createElement","transform","k","x","mouse","transformOrigin","_startPosition","_zoom","onZoom","_drag","pointermove","update","t","dx","dy","source","d","appendChild","removeChild","type","offsetLeft","offsetTop","offsetHeight","sockets","onSelect","bindSocket","bindControl","ViewSocket","ViewControl","get","getPosition","accumulate","ctrlKey","prev","inputNode","outputNode","zIndex","points","getPoints","getSocketPosition","EditorView","overflow","view","resize","on","updateConnections","area","nodeView","ViewNode","viewInput","viewOutput","connView","ViewConnection","getConnections","conn","parentElement","clientWidth","height","clientHeight","target","Selected","list","contains","callback","NodeEditor","selected","selectNode","each","addNode","removeNode","connectTo","remove","add","clear","beforeImport","getComponent","fromJSON","jsonNode","jsonConnection","nodeId","targetOutput","targetInput","connect","afterImport"],"mappings":"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"}